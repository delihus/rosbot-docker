# Quick Start
# $ docker compose -f compose.rosbot.yaml up

services:

  rplidar:
    image: husarion/rplidar:galactic
    restart: unless-stopped
    devices:
      - /dev/ttyUSB0
    command: ros2 launch rplidar_ros2 rplidar_launch.py

  nav2:
    image: husarion/nav2:galactic
    restart: unless-stopped
    volumes: 
      - ./config/nav2_params.yaml:/ros2_ws/src/husarion_nav2/config/nav2_params.yaml
    command: >
      ros2 launch nav2_bringup navigation_launch.py    
        params_file:=/ros2_ws/src/husarion_nav2/config/nav2_params.yaml

  slam-toolbox:
    image: husarion/slam-toolbox:galactic 
    restart: unless-stopped
    volumes: 
      - ./config/slam_params.yaml:/ros2_ws/src/husarion_nav2/config/slam_params.yaml
    command: >
      ros2 launch slam_toolbox online_sync_launch.py 
        slam_params_file:=/ros2_ws/src/husarion_nav2/config/slam_params.yaml


  bridge:
    image: husarion/ros:galactic-ros1-bridge
    restart: unless-stopped
    environment:
      - ROS_MASTER_URI=http://ros-master:11311
    command: ros2 run ros1_bridge dynamic_bridge

  ros-master:
    image: ros:melodic-ros-core
    restart: unless-stopped
    command: stdbuf -o L roscore

  rosbot:
    image: husarion/rosbot:melodic-rpi
    restart: unless-stopped
    devices:
      - ${SERIAL_PORT} 
    environment:
      - SERIAL_PORT  
      - ROS_MASTER_URI=http://ros-master:11311
    command: roslaunch --wait rosbot_description rosbot_docker.launch